#version 460 core
layout (local_size_x = 1024) in;

struct DrawElementsIndirectCommand {
    uint Count;
    uint InstanceCount;
    uint FirstIndex;
    uint BaseInstance;
    
    // Original instance count
    uint BaseInstanceCount;
    
    // Center of the chunk
    int ChunkCenterX;
    int ChunkCenterY;
    int spacer;
};

// Uniforms
uniform mat4 uProj;
uniform mat4 uView;

uniform uint uTileChunkCount;

// Array containing indirect draw calls
layout (std430, binding = 0) buffer IndirectBlock {
    DrawElementsIndirectCommand cmds[];
};

bool pointInFrustum(vec3 p) {
    vec4 Pclip = uProj * uView * vec4(p, 1.0);
    return all(lessThan(abs(Pclip.xy), vec2(Pclip.w))) && Pclip.z > 0.0 && Pclip.z < Pclip.w;
}
vec3 cornerOffsets[8] = vec3[](
    vec3(16, 16, 16), vec3(-16, 16, 16), vec3(16, -16, 16), vec3(-16, -16, 16),
    vec3(16, 16, -16), vec3(-16, 16, -16), vec3(16, -16, -16), vec3(-16, -16, -16));

bool chunkInFrustum(vec3 p) {
    for (int i = 0; i < 8; ++i) {
        if (pointInFrustum(p + cornerOffsets[i])) {
            return true;
        }
    }
    return false;
}

void main() {
    uint index = gl_GlobalInvocationID.x;
    
    if (index >= uTileChunkCount) return;
    
    cmds[index].InstanceCount = chunkInFrustum(vec3(cmds[index].ChunkCenterX, 0, cmds[index].ChunkCenterY)) ? cmds[index].BaseInstanceCount : 0;
}
